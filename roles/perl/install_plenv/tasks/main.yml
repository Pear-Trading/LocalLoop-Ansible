---

# Taken from https://github.com/swfz/ansible-plenv and modified for project
# Modified to remove local version setting

- name: exist plenv
  stat:
    path: ~/.plenv/bin/plenv
  register: exist_plenv
  become: yes
  become_user: "{{ local_loop.runtime_user }}"
  changed_when: false

- name: install plenv
  when: exist_plenv.stat.exists == false
  git:
    repo: https://github.com/tokuhirom/plenv.git
    dest: ~/.plenv
    clone: yes
  become: yes
  become_user: "{{ local_loop.runtime_user }}"

- name: exist perl build
  stat:
    path: ~/.plenv/plugins/perl-build
  register: exist_perl_build
  become: yes
  become_user: "{{ local_loop.runtime_user }}"
  changed_when: false

- name: install perl build
  when: exist_plenv.stat.exists == false
  git:
    repo: https://github.com/tokuhirom/Perl-Build.git
    dest: ~/.plenv/plugins/perl-build
    clone: yes
  become: yes
  become_user: "{{ local_loop.runtime_user }}"

- name: set profile.d
  template:
    src: plenv.sh.j2
    dest: /etc/profile.d/plenv.sh
    owner: root
    mode: 644
  become: yes

- name: exist version
  shell: "~/.plenv/bin/plenv versions | grep {{ local_loop.perl_version }} | wc -l"
  register: exist_version
  become_user: "{{ local_loop.runtime_user }}"
  become: yes
  changed_when: false

- name: install perl
  when: exist_version.stdout == "0"
  shell: "~/.plenv/bin/plenv install {{ local_loop.perl_version }}"
  become_user: "{{ local_loop.runtime_user }}"
  become: yes

- name: "check global version"
  shell: "~/.plenv/bin/plenv global | grep {{ local_loop.perl_version }} | wc -l"
  register: check_version
  become_user: "{{ local_loop.runtime_user }}"
  become: yes
  changed_when: false

- name: "set global perl"
  when: item.0.stdout != "1"
  shell: "~/.plenv/bin/plenv global {{ local_loop.perl_version }}"
  become_user: "{{ local_loop.runtime_user }}"
  become: yes

- name: exist cpanm
  stat:
  path: ~/.plenv/versions/{{ local_loop.perl_version }}/bin/cpanm
  register: exist_cpanm
  become_user: "{{ local_loop.runtime_user }}"
  become: yes
  changed_when: false

- name: install cpanm
  when: exist_cpanm.stat.exists == false
  shell: "~/.plenv/bin/plenv install-cpanm"
  become_user: "{{ local_loop.runtime_user }}"
  become: yes